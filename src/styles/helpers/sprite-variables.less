/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@icon-basvuru-name: 'icon_basvuru';
@icon-basvuru-x: 56px;
@icon-basvuru-y: 63px;
@icon-basvuru-offset-x: -56px;
@icon-basvuru-offset-y: -63px;
@icon-basvuru-width: 60px;
@icon-basvuru-height: 41px;
@icon-basvuru-total-width: 168px;
@icon-basvuru-total-height: 112px;
@icon-basvuru-image: '../images/sprite.png';
@icon-basvuru: 56px 63px -56px -63px 60px 41px 168px 112px '../images/sprite.png' 'icon_basvuru';
@icon-duyuru-name: 'icon_duyuru';
@icon-duyuru-x: 0px;
@icon-duyuru-y: 0px;
@icon-duyuru-offset-x: 0px;
@icon-duyuru-offset-y: 0px;
@icon-duyuru-width: 60px;
@icon-duyuru-height: 60px;
@icon-duyuru-total-width: 168px;
@icon-duyuru-total-height: 112px;
@icon-duyuru-image: '../images/sprite.png';
@icon-duyuru: 0px 0px 0px 0px 60px 60px 168px 112px '../images/sprite.png' 'icon_duyuru';
@icon-on-degerlendirme-name: 'icon_on_degerlendirme';
@icon-on-degerlendirme-x: 123px;
@icon-on-degerlendirme-y: 0px;
@icon-on-degerlendirme-offset-x: -123px;
@icon-on-degerlendirme-offset-y: 0px;
@icon-on-degerlendirme-width: 45px;
@icon-on-degerlendirme-height: 47px;
@icon-on-degerlendirme-total-width: 168px;
@icon-on-degerlendirme-total-height: 112px;
@icon-on-degerlendirme-image: '../images/sprite.png';
@icon-on-degerlendirme: 123px 0px -123px 0px 45px 47px 168px 112px '../images/sprite.png' 'icon_on_degerlendirme';
@icon-secim-gunu-name: 'icon_secim_gunu';
@icon-secim-gunu-x: 0px;
@icon-secim-gunu-y: 63px;
@icon-secim-gunu-offset-x: 0px;
@icon-secim-gunu-offset-y: -63px;
@icon-secim-gunu-width: 53px;
@icon-secim-gunu-height: 49px;
@icon-secim-gunu-total-width: 168px;
@icon-secim-gunu-total-height: 112px;
@icon-secim-gunu-image: '../images/sprite.png';
@icon-secim-gunu: 0px 63px 0px -63px 53px 49px 168px 112px '../images/sprite.png' 'icon_secim_gunu';
@icon-tanisma-toplantisi-name: 'icon_tanisma_toplantisi';
@icon-tanisma-toplantisi-x: 63px;
@icon-tanisma-toplantisi-y: 0px;
@icon-tanisma-toplantisi-offset-x: -63px;
@icon-tanisma-toplantisi-offset-y: 0px;
@icon-tanisma-toplantisi-width: 57px;
@icon-tanisma-toplantisi-height: 50px;
@icon-tanisma-toplantisi-total-width: 168px;
@icon-tanisma-toplantisi-total-height: 112px;
@icon-tanisma-toplantisi-image: '../images/sprite.png';
@icon-tanisma-toplantisi: 63px 0px -63px 0px 57px 50px 168px 112px '../images/sprite.png' 'icon_tanisma_toplantisi';
@spritesheet-width: 168px;
@spritesheet-height: 112px;
@spritesheet-image: '../images/sprite.png';
@spritesheet-sprites: @icon-basvuru @icon-duyuru @icon-on-degerlendirme @icon-secim-gunu @icon-tanisma-toplantisi;
@spritesheet: 168px 112px '../images/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
